mlip									FALSE                       # <bool>      Whether mlip activated
    mlip:load_from                                                  # <string>    Filename with MTP. If not specified driver operates directly with Ab-Initio model (without additional routines)

calculate_efs							FALSE						# <bool>      Enables/disables EFS calculation by MTP (disabled learning may be usefull in pure learning/selection regime for best performance)

sample									FALSE						# <bool>      Activates/deactivates selection (active learning engine)
	sample:threshold					2.0							# <double>    Selection threshold - maximum allowed extrapolation level. Configuration is sampled if its grade is larger than this value (should be >=1)
	sample:threshold_break				11.0						# <double>    Break the program if this threshold exceeded. Activated if >sample:threshold. 
	sample:save_sampled_to										    # <string>    Selected configurations will be saved in this file after selection is complete. No configuration saving if not specified
	sample:add_grade_feature			FALSE						# <bool>      If true grade data will be added to configuration
	sample:log													    # <string>    Where to write selection log. No logging if not specified; if "stdout" and "stderr" corresponds to standard output streams; otherwise log will be outputed to file with that name

select									FALSE						# <bool>      Activates/deactivates selection (active learning engine)
	select:site_en_weight				0.0							# <double>    Weight for site energy equations in selection procedure
	select:energy_weight				1.0							# <double>    Weight for energy equation in selection procedure
	select:force_weight					0.0							# <double>    Weight for forces equations in selection procedure
	select:stress_weight				0.0							# <double>    Weight for stresses equations in selection procedure
	select:weight_scaling				2							# <string>    Indicates how the weights for energy and for stress are scaled with the number of atoms. The corresponded weight is divided by the number of atoms in the power (select:weight_scaling / 2)
	select:init_value					0.000001					# <double>    Parameter for initiating selecting process (should be >0 but small)
	select:threshold					1.001						# <double>    Treshold for swaps. Should be >1 to prevent infinite swaps
	select:batch_size					9999						# <int>       Configurations are committed for selection by batches. Configuratoions are accumulated in batch until the number of committed configurations reaches this number. After that, selection among all collected configurations is performed. Unlimited if 0 is set
	select:swap_limit					0							# <int>       Maximal allowed number of swaps while selection. Unlimited if 0
	select:save_selected_to									        # <string>    Selected configurations will be saved in this file after selection is complete. No configuration saving if not specified
	select:save_to											    	# <string>    The state of the selection will be saved in this file after selection is complete. No saving if not specified. Can be used for further continue selection/learning on the fly
	select:log														# <string>    Where to write selection log. No logging if not specified; if "stdout" and "stderr" corresponds to standard output streams; otherwise log will be outputed to file with that name

fit										FALSE						# <bool>      Enables/disables MTP learning
	fit:save_to							 							# <string>    Output MTP file name (for trained MTP)
	fit:energy_weight					1.0							# <double>    Weight for energy equation in fitting procedure
	fit:force_weight					0.01						# <double>    Weight for forces equations in fitting procedure
	fit:stress_weight					0.001						# <double>    Weight for stresses equations in fitting procedure
	fit:penalty_weight					1.0e-6						# <double>    Weight for regularization in fitting procedure
	fit:scale_by_force					0							# <double>    If greater than zero, large forces will be fitted less accurate than small 
	fit:select_factor					1.0							# <double>    Factor to decrease weight for NON-selected equations while fitting (0-1). If 1 all equations in selected configurations are accounted with 'fit:energy_weight', 'fit:force_weight', 'fit:stress_weight'. If 0 fitting is done only to the selected equations
	fit:weight_scaling					1							# <double>    Indicates how the weights for energy and stresses equations are scaled with the number of atoms. The corresponded weight is divided by the number of atoms in the power of (fit:weight_scaling_energy / 2)
	fit:weight_scaling_forces			0							# <double>    Indicates how the weights for forces equation is scaled with the number of atoms. The corresponded weight is divided by the number of atoms in the power of (fit:weight_scaling_forces / 2)
	fit:iteration_limit					1000						# <int>       Maximal number of iterations if iterative fitting method is used
	fit:tolerance						1e-8						# <double>    Convergence criterion for fucntion decrease in BFGS
	fit:skip_preinit					FALSE						# <bool>      If false, than 75 BFGS iterations are done before the actual training 
	fit:init_random						FALSE						# <bool>      Coefficients will be initialized randomly if true
	fit:no_mindist_update				FALSE						# <bool>      'mindist' parameter will be taken from the training set if true
	fit:log								         					# <string>    Where to write fitting log. No logging if not specified; if "stdout" and "stderr" corresponds to standard output streams; otherwise log will be outputed to file with that name

lotf									FALSE						# <bool>      Activate LOTF
	lotf:fit_to_active_set				FALSE						# <bool>      If true fitting is done on the active set, otherwise new configurations are aed to the training set
	lotf:efs_only_by_mlip				FALSE						# <bool>      If true EFS is recalculated by MTP when the configuration is learned
	lotf:sampling_limit					0							# <int>		  Update mlip if the number of sampled configurations exceeds this limit. 0 = unlimited
	lotf:save_ts_to						last_ts.cfg				    # <string>    File with the last training set. Also use to redistribute the training set among processors in parallel mode. If not specified configurations can be distributed not equally among procesors
	lotf:save_updates					FALSE						# <bool>	  After each update MLIP with the selection state and, optionally, the training set will be saved in a separate file with name ending with the number of update step 
	lotf:log													    # <string>    Where to write MLIP log. No logging if not specified; if "stdout" and "stderr" corresponds to standard output streams; otherwise log will be outputed to file with that name

write_cfgs								FALSE                       # <bool>      Whether to write all processed configurations
	write_cfgs:to													# <string>    File for writing all processed configurations. No confuguration recording if not specified
    write_cfgs:skip                     0                           # <int>       Skip this number of configurations while writing

abinitio                                FALSE                       # <bool>      Defines whether abinitio model is switched-on
    abinitio:input_file                 input.cfg                   # <string>    cfg-file for reading by the external ab-initio code     
    abinitio:output_file                output.cfg                  # <string>    File for reading by mlip code written in cfg-format with calculated EFS by the external ab-initio code   
    abinitio:start_command              ./vasp.sh                   # <string>    Command to launch external potential
                                                                
check_errors							FALSE					    # <bool>      Enables comparison and accumulation of error statistics for EFS calculated by ab-initio model and MTP. Requires either specified ab-initio model or EFS present in configurations. 
	check_errors:report_to              stdout                      # <string>    Report will be saved to this file (or outputed on screen if "stdout" or "stderr" specified).
    check_errors:log                                                # <string>    Indicates where to write log with EFS differences for each configuration. "stdout" and "stderr" corresponds to standard output streams


